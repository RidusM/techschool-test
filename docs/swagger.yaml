basePath: /
definitions:
  entity.Delivery:
    properties:
      address:
        maxLength: 500
        type: string
      city:
        maxLength: 100
        type: string
      email:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        type: string
      phone:
        type: string
      region:
        maxLength: 100
        type: string
      zip:
        maxLength: 20
        type: string
    required:
    - address
    - city
    - email
    - name
    - phone
    - region
    - zip
    type: object
  entity.Item:
    properties:
      brand:
        maxLength: 100
        type: string
      chrt_id:
        minimum: 1
        type: integer
      name:
        maxLength: 255
        type: string
      nm_id:
        minimum: 1
        type: integer
      price:
        minimum: 1
        type: integer
      rid:
        type: string
      sale:
        maximum: 100
        minimum: 0
        type: integer
      size:
        type: string
      status:
        minimum: 0
        type: integer
      total_price:
        minimum: 1
        type: integer
      track_number:
        maxLength: 50
        type: string
    required:
    - brand
    - chrt_id
    - name
    - nm_id
    - price
    - rid
    - size
    - total_price
    - track_number
    type: object
  entity.Order:
    properties:
      customer_id:
        maxLength: 50
        type: string
      date_created:
        type: string
      delivery:
        $ref: '#/definitions/entity.Delivery'
      delivery_service:
        maxLength: 50
        type: string
      entry:
        maxLength: 10
        type: string
      internal_signature:
        maxLength: 255
        type: string
      items:
        items:
          $ref: '#/definitions/entity.Item'
        minItems: 1
        type: array
      locale:
        type: string
      oof_shard:
        type: string
      order_uid:
        type: string
      payment:
        $ref: '#/definitions/entity.Payment'
      shardkey:
        maxLength: 10
        type: string
      sm_id:
        minimum: 0
        type: integer
      track_number:
        maxLength: 50
        type: string
    required:
    - customer_id
    - date_created
    - delivery
    - delivery_service
    - entry
    - items
    - locale
    - oof_shard
    - order_uid
    - payment
    - shardkey
    - sm_id
    - track_number
    type: object
  entity.Payment:
    properties:
      amount:
        minimum: 1
        type: integer
      bank:
        maxLength: 50
        type: string
      currency:
        type: string
      custom_fee:
        minimum: 0
        type: integer
      delivery_cost:
        minimum: 0
        type: integer
      goods_total:
        minimum: 1
        type: integer
      payment_dt:
        type: integer
      provider:
        maxLength: 50
        type: string
      request_id:
        maxLength: 50
        type: string
      transaction:
        type: string
    required:
    - amount
    - bank
    - currency
    - delivery_cost
    - goods_total
    - payment_dt
    - provider
    - transaction
    type: object
  httpt.ErrorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: stormkillpeople@gmail.com
    name: RidusM
  description: API для управления заказами
  license:
    name: MIT-0
    url: https://github.com/aws/mit-0
  termsOfService: http://swagger.io/terms/
  title: Order Service API
  version: "1.0"
paths:
  /orders/{order_uid}:
    get:
      consumes:
      - application/json
      description: Возвращает заказ по уникальному идентификатору
      parameters:
      - description: Уникальный идентификатор заказа
        in: path
        name: order_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ с данными заказа
          schema:
            $ref: '#/definitions/entity.Order'
        "400":
          description: Неверный формат order_uid
          schema:
            $ref: '#/definitions/httpt.ErrorResponse'
        "404":
          description: Заказ не найден
          schema:
            $ref: '#/definitions/httpt.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpt.ErrorResponse'
      summary: Получить заказ
      tags:
      - Orders
swagger: "2.0"
